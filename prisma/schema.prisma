generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  name         String?
  password     String
  createdAt    DateTime      @default(now())
  role         Role          @default(USER)
  comments     Comment[]
  commentLikes CommentLike[]
  posts        Post[]
  postLikes    PostLike[]
}

model Post {
  id        Int        @id @default(autoincrement())
  title     String
  content   String
  authorId  Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  comments  Comment[]
  author    User       @relation(fields: [authorId], references: [id])
  likes     PostLike[]
}

model Comment {
  id        Int           @id @default(autoincrement())
  content   String
  authorId  Int
  postId    Int
  parentId  Int?
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  author    User          @relation(fields: [authorId], references: [id])
  parent    Comment?      @relation("Replies", fields: [parentId], references: [id])
  replies   Comment[]     @relation("Replies")
  post      Post          @relation(fields: [postId], references: [id])
  likes     CommentLike[]
}

model PostLike {
  id     Int  @id @default(autoincrement())
  userId Int
  postId Int
  post   Post @relation(fields: [postId], references: [id])
  user   User @relation(fields: [userId], references: [id])

  @@unique([userId, postId])
}

model CommentLike {
  id        Int     @id @default(autoincrement())
  userId    Int
  commentId Int
  comment   Comment @relation(fields: [commentId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@unique([userId, commentId])
}

enum Role {
  USER
  ADMIN
}
