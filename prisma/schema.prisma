generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  role      Role     @default(USER)

  // Relations
  posts            Post[]
  postLikes        PostLike[]
  comments         Comment[]
  commentLikes     CommentLike[]
  sentRequests     Request[]     @relation("SentRequests")
  receivedRequests Request[]     @relation("ReceivedRequests")
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  authorId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  author   User       @relation(fields: [authorId], references: [id])
  comments Comment[]
  likes    PostLike[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  authorId  Int
  postId    Int
  parentId  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  author  User          @relation(fields: [authorId], references: [id])
  post    Post          @relation(fields: [postId], references: [id])
  parent  Comment?      @relation("Replies", fields: [parentId], references: [id])
  replies Comment[]     @relation("Replies")
  likes   CommentLike[]
}

model PostLike {
  id     Int @id @default(autoincrement())
  userId Int
  postId Int

  user User @relation(fields: [userId], references: [id])
  post Post @relation(fields: [postId], references: [id])

  @@unique([userId, postId])
}

model CommentLike {
  id        Int @id @default(autoincrement())
  userId    Int
  commentId Int

  user    User    @relation(fields: [userId], references: [id])
  comment Comment @relation(fields: [commentId], references: [id])

  @@unique([userId, commentId])
}

model Request {
  id         Int      @id @default(autoincrement())
  senderId   Int
  receiverId Int
  status     String   @default("PENDING")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  sender   User @relation("SentRequests", fields: [senderId], references: [id])
  receiver User @relation("ReceivedRequests", fields: [receiverId], references: [id])
}

enum Role {
  USER
  ADMIN
}
